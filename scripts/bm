#!/bin/sh

if [ $# -eq 0 ]
then
echo "0 arg, project_name = myproject, files = main.cpp, output = app"
echo "cmake_minimum_required(VERSION 3.14)
project(myproject LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(Boost  COMPONENTS  REQUIRED)
include_directories(\${BOOST_INCLUDE_DIRS})

add_executable(app
  main.cpp
)

target_link_libraries(app \${Boost_LIBRARIES})
" > CMakeLists.txt

elif [ $# -eq 1 ]
then

echo "1 arg, project_name = $1, files = main.cpp, output = $1"

echo "cmake_minimum_required(VERSION 3.14)
project($1 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(Boost  COMPONENTS  REQUIRED)
include_directories(\${BOOST_INCLUDE_DIRS})

add_executable($1
  main.cpp
)

target_link_libraries($1 \${Boost_LIBRARIES})
" > CMakeLists.txt


elif [ $# -eq 2 ]
then

echo "2 args, project_name = $1 , files = $2, output = $1"

echo "cmake_minimum_required(VERSION 3.14)
project($1 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(Boost  COMPONENTS  REQUIRED)
include_directories(\${BOOST_INCLUDE_DIRS})

add_executable($1
  $2
)

target_link_libraries($1 \${Boost_LIBRARIES})
" > CMakeLists.txt


elif [ $# -gt 2 ]
then

echo "$# args, project_name = $1 , files = $2 $3 $4 $5 $6 $7 $8 $9 , output = $1"

echo "cmake_minimum_required(VERSION 3.14)
project($1 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(Boost  COMPONENTS  REQUIRED)
include_directories(\${BOOST_INCLUDE_DIRS})

add_executable($1
  $2 $3 $4
  $5 $6 $7
  $8 $9
)

target_link_libraries($1 \${Boost_LIBRARIES})
" > CMakeLists.txt

fi
